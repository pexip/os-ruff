---
source: crates/ruff_linter/src/rules/flake8_use_pathlib/mod.rs
---
import_from_as.py:14:5: PTH100 (os-path-abspath) `os.path.abspath()` should be replaced by `Path.resolve()`
   |
12 | q = "bar"
13 | 
14 | a = xabspath(p)
   |     ^^^^^^^^ PTH100 (os-path-abspath)
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
   |

import_from_as.py:15:6: PTH101 (os-chmod) `os.chmod()` should be replaced by `Path.chmod()`
   |
14 | a = xabspath(p)
15 | aa = xchmod(p)
   |      ^^^^^^ PTH101 (os-chmod)
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
   |

import_from_as.py:16:7: PTH102 (os-mkdir) `os.mkdir()` should be replaced by `Path.mkdir()`
   |
14 | a = xabspath(p)
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
   |       ^^^^^^ PTH102 (os-mkdir)
17 | xmakedirs(p)
18 | xrename(p)
   |

import_from_as.py:17:1: PTH103 (os-makedirs) `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`
   |
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
   | ^^^^^^^^^ PTH103 (os-makedirs)
18 | xrename(p)
19 | xreplace(p)
   |

import_from_as.py:18:1: PTH104 (os-rename) `os.rename()` should be replaced by `Path.rename()`
   |
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
18 | xrename(p)
   | ^^^^^^^ PTH104 (os-rename)
19 | xreplace(p)
20 | xrmdir(p)
   |

import_from_as.py:19:1: PTH105 (os-replace) `os.replace()` should be replaced by `Path.replace()`
   |
17 | xmakedirs(p)
18 | xrename(p)
19 | xreplace(p)
   | ^^^^^^^^ PTH105 (os-replace)
20 | xrmdir(p)
21 | xremove(p)
   |

import_from_as.py:20:1: PTH106 (os-rmdir) `os.rmdir()` should be replaced by `Path.rmdir()`
   |
18 | xrename(p)
19 | xreplace(p)
20 | xrmdir(p)
   | ^^^^^^ PTH106 (os-rmdir)
21 | xremove(p)
22 | xunlink(p)
   |

import_from_as.py:21:1: PTH107 (os-remove) `os.remove()` should be replaced by `Path.unlink()`
   |
19 | xreplace(p)
20 | xrmdir(p)
21 | xremove(p)
   | ^^^^^^^ PTH107 (os-remove)
22 | xunlink(p)
23 | xgetcwd(p)
   |

import_from_as.py:22:1: PTH108 (os-unlink) `os.unlink()` should be replaced by `Path.unlink()`
   |
20 | xrmdir(p)
21 | xremove(p)
22 | xunlink(p)
   | ^^^^^^^ PTH108 (os-unlink)
23 | xgetcwd(p)
24 | b = xexists(p)
   |

import_from_as.py:23:1: PTH109 (os-getcwd) `os.getcwd()` should be replaced by `Path.cwd()`
   |
21 | xremove(p)
22 | xunlink(p)
23 | xgetcwd(p)
   | ^^^^^^^ PTH109 (os-getcwd)
24 | b = xexists(p)
25 | bb = xexpanduser(p)
   |

import_from_as.py:24:5: PTH110 (os-path-exists) `os.path.exists()` should be replaced by `Path.exists()`
   |
22 | xunlink(p)
23 | xgetcwd(p)
24 | b = xexists(p)
   |     ^^^^^^^ PTH110 (os-path-exists)
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
   |

import_from_as.py:25:6: PTH111 (os-path-expanduser) `os.path.expanduser()` should be replaced by `Path.expanduser()`
   |
23 | xgetcwd(p)
24 | b = xexists(p)
25 | bb = xexpanduser(p)
   |      ^^^^^^^^^^^ PTH111 (os-path-expanduser)
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
   |

import_from_as.py:26:7: PTH112 (os-path-isdir) `os.path.isdir()` should be replaced by `Path.is_dir()`
   |
24 | b = xexists(p)
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
   |       ^^^^^^ PTH112 (os-path-isdir)
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
   |

import_from_as.py:27:8: PTH113 (os-path-isfile) `os.path.isfile()` should be replaced by `Path.is_file()`
   |
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
   |        ^^^^^^^ PTH113 (os-path-isfile)
28 | bbbbb = xislink(p)
29 | xreadlink(p)
   |

import_from_as.py:28:9: PTH114 (os-path-islink) `os.path.islink()` should be replaced by `Path.is_symlink()`
   |
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
   |         ^^^^^^^ PTH114 (os-path-islink)
29 | xreadlink(p)
30 | xstat(p)
   |

import_from_as.py:29:1: PTH115 (os-readlink) `os.readlink()` should be replaced by `Path.readlink()`
   |
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
29 | xreadlink(p)
   | ^^^^^^^^^ PTH115 (os-readlink)
30 | xstat(p)
31 | xisabs(p)
   |

import_from_as.py:30:1: PTH116 (os-stat) `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`
   |
28 | bbbbb = xislink(p)
29 | xreadlink(p)
30 | xstat(p)
   | ^^^^^ PTH116 (os-stat)
31 | xisabs(p)
32 | xjoin(p, q)
   |

import_from_as.py:31:1: PTH117 (os-path-isabs) `os.path.isabs()` should be replaced by `Path.is_absolute()`
   |
29 | xreadlink(p)
30 | xstat(p)
31 | xisabs(p)
   | ^^^^^^ PTH117 (os-path-isabs)
32 | xjoin(p, q)
33 | s.join((p, q))
   |

import_from_as.py:32:1: PTH118 (os-path-join) `os.path.join()` should be replaced by `Path` with `/` operator
   |
30 | xstat(p)
31 | xisabs(p)
32 | xjoin(p, q)
   | ^^^^^ PTH118 (os-path-join)
33 | s.join((p, q))
34 | s.join([p, q])
   |

import_from_as.py:33:1: PTH118 (os-path-join) `os.sep.join()` should be replaced by `Path` with `/` operator
   |
31 | xisabs(p)
32 | xjoin(p, q)
33 | s.join((p, q))
   | ^^^^^^ PTH118 (os-path-join)
34 | s.join([p, q])
35 | xbasename(p)
   |

import_from_as.py:34:1: PTH118 (os-path-join) `os.sep.join()` should be replaced by `Path` with `/` operator
   |
32 | xjoin(p, q)
33 | s.join((p, q))
34 | s.join([p, q])
   | ^^^^^^ PTH118 (os-path-join)
35 | xbasename(p)
36 | xdirname(p)
   |

import_from_as.py:35:1: PTH119 (os-path-basename) `os.path.basename()` should be replaced by `Path.name`
   |
33 | s.join((p, q))
34 | s.join([p, q])
35 | xbasename(p)
   | ^^^^^^^^^ PTH119 (os-path-basename)
36 | xdirname(p)
37 | xsamefile(p)
   |

import_from_as.py:36:1: PTH120 (os-path-dirname) `os.path.dirname()` should be replaced by `Path.parent`
   |
34 | s.join([p, q])
35 | xbasename(p)
36 | xdirname(p)
   | ^^^^^^^^ PTH120 (os-path-dirname)
37 | xsamefile(p)
38 | xsplitext(p)
   |

import_from_as.py:37:1: PTH121 (os-path-samefile) `os.path.samefile()` should be replaced by `Path.samefile()`
   |
35 | xbasename(p)
36 | xdirname(p)
37 | xsamefile(p)
   | ^^^^^^^^^ PTH121 (os-path-samefile)
38 | xsplitext(p)
   |

import_from_as.py:38:1: PTH122 (os-path-splitext) `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`
   |
36 | xdirname(p)
37 | xsamefile(p)
38 | xsplitext(p)
   | ^^^^^^^^^ PTH122 (os-path-splitext)
   |
